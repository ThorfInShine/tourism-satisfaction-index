name: Deploy to Hostinger

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Deploy to server
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        password: ${{ secrets.PASSWORD }}
        script: |
          echo "🚀 Starting clean deployment..."
          
          PROJECT_DIR=/var/www/html/batas.bpskotabatu.com
          VENV=$PROJECT_DIR/venv
          
          # Navigate to project directory
          cd $PROJECT_DIR
          
          # Backup current data
          if [ -f "data/combined_batu_tourism_reviews_cleaned.csv" ]; then
            sudo -u www-data cp data/combined_batu_tourism_reviews_cleaned.csv data/backups/auto_backup_$(date +%Y%m%d_%H%M%S).csv
            echo "✅ Data backed up"
          fi
          
          # Pull latest code
          sudo git fetch origin
          sudo git reset --hard origin/main
          echo "✅ Code updated"
          
          # Ensure virtual environment exists
          if [ ! -d "$VENV" ]; then
            sudo -u www-data python3 -m venv $VENV
          fi
          
          # Install/update dependencies in venv
          sudo -u www-data /bin/bash -c "source $VENV/bin/activate && pip install --upgrade pip && pip install -r requirements.txt"
          echo "✅ Dependencies updated"
          
          # Ensure writable directories for logs, data, tmp, runtime
          sudo mkdir -p $PROJECT_DIR/logs $PROJECT_DIR/data $PROJECT_DIR/tmp $PROJECT_DIR/runtime
          sudo chown -R www-data:www-data $PROJECT_DIR
          sudo chmod -R 755 $PROJECT_DIR
          sudo chmod -R 777 $PROJECT_DIR/data $PROJECT_DIR/logs $PROJECT_DIR/tmp $PROJECT_DIR/runtime
          echo "✅ Permissions set"
          
          # Restart application via Supervisor (using wrapper script)
          sudo -u www-data /bin/bash $PROJECT_DIR/start_batas.sh
          echo "✅ Application restarted via wrapper script"
          
          # Test Nginx configuration
          sudo nginx -t && sudo systemctl reload nginx
          echo "✅ Nginx reloaded"
          
          # Wait for app to start
          sleep 10
          
          # Health check
          if curl -f http://localhost:5000/health > /dev/null 2>&1; then
            echo "✅ Application health check passed"
          else
            echo "⚠️ Application health check failed"
            sudo supervisorctl status batas-app
            sudo tail -20 $PROJECT_DIR/logs/batas-app.log
          fi
          
          echo "🎉 Deployment completed!"
